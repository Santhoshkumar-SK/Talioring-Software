/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tailor_project_final;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PRADEEPRAJ
 */
public class Under_Processing extends javax.swing.JInternalFrame {
    DefaultTableModel dm;
    /**
     * Creates new form Under_Processing
     */
    public Under_Processing() {
        initComponents();
        CreateColumn();
        CreateRows();
    }
    private void CreateColumn(){
        dm=(DefaultTableModel) jTable1.getModel();
        dm.addColumn("CUSTOMER ID");
        dm.addColumn("CUSTOMER NAME");
        dm.addColumn("ITEM");
        dm.addColumn("DELIVERY DATE");
        dm.addColumn("QUANTITY");
        //dm.addColumn("DELIVERY DATE");
    }
      private void CreateRows(){
        try{
                         java.sql.Connection Connect;
                Connect = Myjava.Myconnection.myconn();
                    PreparedStatement pt = Connect.prepareStatement("select * from In_Process");
                   // pt.setString(1,custid.trim());
                    ResultSet rs = pt.executeQuery();
                    while(rs.next()){
                    
                   String custid = rs.getString("Cust_ID"); 
                   String nme = rs.getString("Cust_Name");
                   String itm = rs.getString("Item");
                   String dl = rs.getString("Delivery_Date");
                  String qn  = rs.getString("Quantity");
                  String[] rowdata ={custid,nme,itm,dl,qn};
                 dm.addRow(rowdata);
                    
                    }
                    
                    pt.close();
                    Connect.close();
            }catch(Exception e){
                      JOptionPane.showMessageDialog(this,"ERROR OCCURS");
                      
              System.out.println(e.getMessage());

               }
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Date = new javax.swing.JLabel();
        Date1 = new javax.swing.JLabel();
        Time = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        Date2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        Date3 = new javax.swing.JLabel();
        Date4 = new javax.swing.JLabel();
        Cust_name = new javax.swing.JTextField();
        Cust_mob = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setTitle("To Check The Items That Are In Process");
        setPreferredSize(new java.awt.Dimension(957, 671));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Date");

        Date.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Date.setText("Date");

        Date1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Date1.setText("Time");

        Time.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Time.setText("Time");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        Date2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Date2.setText("Measurement List");

        jScrollPane2.setViewportView(jList1);

        Date3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Date3.setText("Customer Name");

        Date4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Date4.setText("Customer Mob.No");

        Cust_name.setEditable(false);
        Cust_name.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        Cust_mob.setEditable(false);
        Cust_mob.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Ready to Deliver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(Date, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(299, 299, 299)
                        .addComponent(Date1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addComponent(Time, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(Date2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(303, 303, 303)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Cust_mob, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))))
                .addContainerGap(85, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Date4, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Date3, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(Cust_name, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(Date)
                    .addComponent(Date1)
                    .addComponent(Time))
                .addGap(49, 49, 49)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(Date2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Date3)
                            .addComponent(Cust_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Date4)
                                    .addComponent(Cust_mob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(61, 61, 61)
                                .addComponent(jButton1)))))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        setBounds(0, 0, 973, 710);
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // -------------TO DISPLAY DATE AND TIME
        Date date = new Date();
        SimpleDateFormat sdf;
        SimpleDateFormat sdt;
        sdf = new java.text.SimpleDateFormat("dd/MM/yyyy");
        Date.setText(sdf.format(date));
        sdt = new SimpleDateFormat(" hh:mm:ss");
       Time.setText(sdt.format(date));
    }//GEN-LAST:event_formInternalFrameOpened

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // --------TO FILL THE FORM-------------
                 String s = jTable1.getValueAt(jTable1.getSelectedRow(),0).toString();
        
        try{
             java.sql.Connection Connect;
                Connect = Myjava.Myconnection.myconn();
             PreparedStatement pt = Connect.prepareStatement("select * from In_Process Where Cust_ID = ?");
                          pt.setString(1,s);
                          ResultSet rs = pt.executeQuery();
                          rs.next();
                          String nme = rs.getString("Cust_Name");
                          String mb = rs.getString("Cust_Mob");
                          Cust_name.setText(nme);
                          Cust_mob.setText(mb);
                          pt.close();
                          Connect.close();
                         
        }catch(Exception e){
            JOptionPane.showMessageDialog(this,"404 Error found");
        }
                DefaultListModel m=new DefaultListModel();

            String s2=jTable1.getValueAt(jTable1.getSelectedRow(),0).toString();
             String s1=jTable1.getValueAt(jTable1.getSelectedRow(),2).toString();
             
            try{
                         java.sql.Connection Connect;
                Connect = Myjava.Myconnection.myconn();
             PreparedStatement pt1 = Connect.prepareStatement("select * from Cust_Data_Entry Where item_name = ? and Cust_ID = ?");
                          pt1.setString(1,s1);
                          pt1.setString(2,s2);
                          ResultSet rs1 = pt1.executeQuery();

                        while(rs1.next()){
                              String i=rs1.getString("Measurement_List");
                             String itname=rs1.getString("Measurement");
                              m.addElement(i + ":"+itname);
                         }
                        jList1.setModel(m);
                         pt1.close();
                    Connect.close();
             
            }catch(Exception e){
                      JOptionPane.showMessageDialog(this,"ERROR");
                      
              System.out.println(e.getMessage());

               }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TO MOVE TO ANOTHER TABLE IN DB
        String s2=jTable1.getValueAt(jTable1.getSelectedRow(),0).toString();
         String cnme,gn,itm,orddt,deldt,stat,qnu,mb;
         try{
         java.sql.Connection Connect;
                Connect = Myjava.Myconnection.myconn();
         PreparedStatement pt1 = Connect.prepareStatement("select * from In_Process where Cust_ID = ?");
                    pt1.setString(1, s2.trim());
                    ResultSet rs1 = pt1.executeQuery();
                    rs1.next();
                    cnme = rs1.getString("Cust_Name");
                   // gn = rs1.getString("Cust_Gen");
                   // mb =rs1.getString("Cust_Mob");
                    itm=rs1.getString("Item");
                    orddt = rs1.getString("Order_Date");
                    deldt= rs1.getString("Delivery_Date");
                    //stat = rs1.getString("status");
                    qnu = rs1.getString("Quantity");
                    int q = Integer.parseInt(qnu);
                     //System.out.println(q);
           PreparedStatement pt2 = Connect.prepareStatement("select * from item_entry where Item_Name = ?");
           pt2.setString(1,itm);
           ResultSet rs2 = pt2.executeQuery();
           rs2.next();
           String pr = rs2.getString("Price");
           //System.out.println(pr);
           int p = Integer.parseInt(pr);
           // System.out.println(p);
          String prize = Integer.toString(p*q);
          
  PreparedStatement pt = Connect.prepareStatement("Insert into Delivery (Cust_ID,Cust_Name,Item,Order_Date,Delivery_Date,Quantity,Price)Values(?,?,?,?,?,?,?)");

                  pt.setString(1,s2);
                 pt.setString(2,cnme); 
                    pt.setString(3,itm);
                   pt.setString(4,orddt);
                   pt.setString(5,deldt);
                   pt.setString(6,qnu);
                   pt.setString(7,prize);
                   int x = pt.executeUpdate();
                   if(x > 0)
                    {
                            JOptionPane.showMessageDialog(this,"READY TO DELIVER");
                            
                
                    }else
                    {
                             JOptionPane.showMessageDialog(this,"404 ERROR FOUND");
                    }
                   String cn = Cust_name.getText();
                   String mn = Cust_mob.getText();
                   String it=jTable1.getValueAt(jTable1.getSelectedRow(),2).toString();
                   String dd=jTable1.getValueAt(jTable1.getSelectedRow(),3).toString();
                   String qu=jTable1.getValueAt(jTable1.getSelectedRow(),4).toString();
           PreparedStatement pt3 = Connect.prepareStatement("delete from In_Process where Cust_ID = ? and Cust_Name = ?  and Cust_Mob = ? and Item = ?  and Delivery_Date = ? and Quantity = ?");
             pt3.setString(1,s2);
             pt3.setString(2,cn);
             pt3.setString(3,mn);
             pt3.setString(4,it);
             pt3.setString(5,dd);
             pt3.setString(6,qu);
             
             // ResultSet rs1 = pt.executeQuery();
             pt3.execute();
             pt3.close();
                   pt2.close();
                    pt.close();
                    pt1.close();
                    Connect.close();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this,"Error");
            System.out.print(e.getMessage());
        }
         
        
         dm=(DefaultTableModel) jTable1.getModel();
         dm.setRowCount(0);
        CreateRows();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Cust_mob;
    private javax.swing.JTextField Cust_name;
    private javax.swing.JLabel Date;
    private javax.swing.JLabel Date1;
    private javax.swing.JLabel Date2;
    private javax.swing.JLabel Date3;
    private javax.swing.JLabel Date4;
    private javax.swing.JLabel Time;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
